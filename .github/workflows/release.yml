name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Release - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install 7z (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install 7zip

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [ "${{ matrix.target }}" = "x86_64-pc-windows-msvc" ]; then
            7z a ../../../obsidian-lsp-${{ github.event.release.tag_name }}-${{ matrix.target }}.zip obsidian-lsp.exe
          else
            tar czf ../../../obsidian-lsp-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz obsidian-lsp
          fi

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            obsidian-lsp-${{ github.event.release.tag_name }}-*.tar.gz
            obsidian-lsp-${{ github.event.release.tag_name }}-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}